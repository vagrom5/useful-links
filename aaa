#include <stdio.h>
#include <string.h>
#include <stdlib.h>

void double_array_to_string(double* arr, int length, char* buffer, int buffer_size) {
    if (!buffer || buffer_size <= 0) {
        fprintf(stderr, "Ошибка: буфер NULL или размер <= 0\n");
        return;
    }

    int pos = 0;
    buffer[0] = '\0';  // Начинаем с пустой строки

    for (int i = 0; i < length; i++) {
        // Записываем текущее число в буфер
        int written = snprintf(buffer + pos, buffer_size - pos, "%.15g", arr[i]);
        
        if (written < 0) {
            fprintf(stderr, "Ошибка форматирования\n");
            break;
        }
        
        pos += written;
        
        // Проверяем, не вышли ли за границы буфера
        if (pos >= buffer_size) {
            fprintf(stderr, "Буфер переполнен\n");
            break;
        }

        // Добавляем запятую (если не последний элемент)
        if (i < length - 1) {
            if (pos + 1 < buffer_size) {
                buffer[pos++] = ',';
                buffer[pos] = '\0';  // Не забываем про нуль-терминатор
            } else {
                fprintf(stderr, "Не хватает места для запятой\n");
                break;
            }
        }
    }
}

int main() {
    double numbers[] = {1.23, 4.56, 7.89, 0.123456789};
    int count = sizeof(numbers) / sizeof(numbers[0]);
    
    // Оцениваем необходимый размер буфера (каждый double может занять до 24 символов + запятые)
    int needed_size = count * 24 + 1; // +1 для нуль-терминатора
    char* buffer = (char*)malloc(needed_size);
    
    if (buffer == NULL) {
        perror("Ошибка выделения памяти");
        return 1;
    }
    
    buffer[0] = '\0'; // Инициализируем пустую строку
    
    array_to_string(numbers, count, buffer, needed_size);
    
    printf("Результат: %s\n", buffer);
    
    free(buffer);
    return 0;
}



Program received signal SIGSEGV, Segmentation fault.
_IO_vsnprintf (string=0x0, maxlen=<optimized out>, format=0x4a743c "%.15g", 
    args=args@entry=0x7fffffffd8d8) at vsnprintf.c:112
112     vsnprintf.c: Нет такого файла или каталога.
(gdb) bt
#0  _IO_vsnprintf (string=0x0, maxlen=<optimized out>, format=0x4a743c "%.15g", 
    args=args@entry=0x7fffffffd8d8) at vsnprintf.c:112
#1  0x00007ffff6aac2c2 in __snprintf (s=<optimized out>, maxlen=<optimized out>, 
    format=<optimized out>) at snprintf.c:33
#2  0x000000000041e17b in double_array_to_string (arr=0x2d52a00, length=1, buffer=0x0, 
    buffer_size=25) at src/core.c:569
#3  0x000000000040b414 in pulse_table (ctx=0x6b80f8 <xlib+56>) at src/tables.c:278
#4  0x00000000004875be in gui (ctx=0x6b80f8 <xlib+56>) at src/main.c:477
#5  0x0000000000487804 in mainloop (ctx=0x6b80f8 <xlib+56>) at src/main.c:534
#6  0x0000000000487d29 in main (argc=2, argv=0x7fffffffe1f8) at src/main.c:653
(gdb) f 2
#2  0x000000000041e17b in double_array_to_string (arr=0x2d52a00, length=1, buffer=0x0, 
    buffer_size=25) at src/core.c:569
569             int written = snprintf(buffer + pos, buffer_size - pos, "%.15g", arr[i]);
(gdb) p buffer
$1 = 0x0
(gdb) p pos
$2 = 0
(gdb) p buffer_size
$3 = 25
(gdb) p arr[i]
$4 = 815.61053240740739
(gdb) f 3
#3  0x000000000040b414 in pulse_table (ctx=0x6b80f8 <xlib+56>) at src/tables.c:278
278                 double_array_to_string(sub->ampls, count, buffer_fsk, fsk_sz);
(gdb) p count
$5 = 1
(gdb) p fsk_sz
$6 = 25
(gdb) p buffer_fsk
$7 = 0x0
(gdb) p sub->ampls
$8 = (double *) 0x2d52a00



count = sizeof(sub->ampls)/sizeof(sub->ampls[0]);
            fsk_sz = count * 24 + 1;
            buffer_fsk = (char*)malloc(fsk_sz);
            if (buffer_fsk == NULL || buffer_fsk <= 0) return;
            buffer_fsk = '\0';
            double_array_to_string(sub->ampls, count, buffer_fsk, fsk_sz);
            nk_layout_space_push(ctx, nk_rect(col3, ROWHEIGHT*15.f, col2, h_row));
//             sprintf(buffer, "%s", buffer_fsk); 
            nk_button_label(ctx, buffer_fsk);

Ошибка: буфер NULL или размер <= 0
vgan: src_ext/nuklear.h:6501: nk_strlen: Проверочное утверждение «str» не выполнено.
end get_subpulses
Program received signal SIGABRT, Aborted.
__GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51
51      ../sysdeps/unix/sysv/linux/raise.c: Нет такого файла или каталога.
(gdb) bt
#0  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:51
#1  0x00007ffff6a9142a in __GI_abort () at abort.c:89
#2  0x00007ffff6a88e67 in __assert_fail_base (fmt=<optimized out>, 
    assertion=assertion@entry=0x4a81ec "str", 
    file=file@entry=0x4a81c8 "src_ext/nuklear.h", line=line@entry=6501, 
    function=function@entry=0x4a9218 <__PRETTY_FUNCTION__.12163> "nk_strlen")
    at assert.c:92
#3  0x00007ffff6a88f12 in __GI___assert_fail (assertion=0x4a81ec "str", 
    file=0x4a81c8 "src_ext/nuklear.h", line=6501, 
    function=0x4a9218 <__PRETTY_FUNCTION__.12163> "nk_strlen") at assert.c:101
#4  0x0000000000447e8d in nk_strlen (str=0x0) at src_ext/nuklear.h:6501
#5  0x000000000046a521 in nk_button_label (ctx=0x6b80f8 <xlib+56>, title=0x0)
    at src_ext/nuklear.h:23827
#6  0x000000000040b4a3 in pulse_table (ctx=0x6b80f8 <xlib+56>) at src/tables.c:281
#7  0x000000000048761b in gui (ctx=0x6b80f8 <xlib+56>) at src/main.c:477
#8  0x0000000000487861 in mainloop (ctx=0x6b80f8 <xlib+56>) at src/main.c:534
#9  0x0000000000487d86 in main (argc=2, argv=0x7fffffffe218) at src/main.c:653
(gdb) f 6
#6  0x000000000040b4a3 in pulse_table (ctx=0x6b80f8 <xlib+56>) at src/tables.c:281
281                 nk_button_label(ctx, buffer_fsk);
(gdb) p buffer_sk
No symbol "buffer_sk" in current context.
(gdb) p buffer_fsk
$1 = 0x0
